<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>exporter on 小黎的技术指北</title>
    <link>https://lyffin1997.github.io/tags/exporter/</link>
    <description>Recent content in exporter on 小黎的技术指北</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 14 Jul 2022 00:23:38 +0800</lastBuildDate><atom:link href="https://lyffin1997.github.io/tags/exporter/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Snmp_exporter安装部署</title>
      <link>https://lyffin1997.github.io/application/snmp_exporter%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Thu, 14 Jul 2022 00:23:38 +0800</pubDate>
      
      <guid>https://lyffin1997.github.io/application/snmp_exporter%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</guid>
      <description>1. 开机交换机snmp协议（非华为交换机跳过这一步） ​ //192.168.1.9是snmp_exporter地址
2. 配置go 环境 安装go1.15.6（tar包或者命令行安装都行）
 vim /etc/profile
export GOROOT=/usr/local/go
export PATH=$PATH:$GOROOT/bin
export GOPATH=/root/go
source /etc/profile
go version #显示版本号即安装成功
  //go环境变量国内代理：
go env -w GO111MODULE=on
go env -w GOPROXY=https://goproxy.cn,direct
 3. 下载snmp环境 yum install gcc gcc-g++ make net-snmp net-snmp-utils net-snmp-libs net-snmp-devel (此外，git也需安装配置好)
 //测试snmp
snmpwalk -v 2c -c public 192.168.1.222 .1 //pubilc是团体名，.1表示查看所有信息，192.168.1.222是设备ip
 4. 下载generator代码 go get github.com/prometheus/snmp_exporter/generator 5. 编译  //路径不一定准确，总之找到GOPATH路径下的generator文件夹
cd ${GOPATH-$HOME/go}/src/github.com/prometheus/snmp_exporter/gener ator go build  6.</description>
    </item>
    
    <item>
      <title>Tomcat_exporter安装部署</title>
      <link>https://lyffin1997.github.io/application/tomcat_exporter%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Thu, 14 Jul 2022 00:04:50 +0800</pubDate>
      
      <guid>https://lyffin1997.github.io/application/tomcat_exporter%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</guid>
      <description>1. 下载相关文件 https://github.com/nlighten/tomcat_exporter
2. 下载下图中6个jar包 放到要监控的Tomcat的lib目录下，例如：/usr/local/apache-tomcat-7.0.61/lib
3. 下载war包 重命名metrics.war，放到Tomcat的webapps目录下，例如：/usr/local/apache-tomcat-7.0.61/webapps
4. 重启Tomcat，访问ip:8080/metrics即可 注意：端口号和启动的tomcat端口号一致
5. 在prometheus.yml中，添加job 6. 重启prometheus 7. promQL  tomcat延迟（5分钟内平均值）  sum by(instance)(increase(tomcat_requestprocessor_time_seconds{instance=&amp;quot;$instance&amp;quot;}[5m])) / sum by(instance)(increase(tomcat_requestprocessor_request_count_total{instance=&amp;quot;$instance&amp;quot;}[5m])) * 1000  tomcat实例发送流量（累加）  sum by(instance)(tomcat_requestprocessor_sent_bytes{instance=&amp;quot;$instance&amp;quot;})  tomcat实例接收流量（累加）  sum by(instance)(tomcat_requestprocessor_received_bytes{instance=&amp;quot;$instance&amp;quot;})  tomcat实例请求总数（累加）  sum by(instance)(tomcat_requestprocessor_request_count_total{instance=&amp;quot;$instance&amp;quot;})  tomcat实例错误请求总数（累加）  sum by(instance)(tomcat_requestprocessor_error_count_total{instance=&amp;quot;$instance&amp;quot;})  tomcat堆内存使用情况  jvm_memory_bytes_used{area=&amp;quot;heap&amp;quot;,instance=&amp;quot;$instance&amp;quot;} / jvm_memory_bytes_committed{area=&amp;quot;heap&amp;quot;,instance=&amp;quot;$instance&amp;quot;} * 100  tomcat GC次数（累加）  sum by(instance)(jvm_gc_collection_seconds_count{instance=&amp;quot;$instance&amp;quot;}) //5分钟内增长次数
increase(jvm_gc_collection_seconds_count{instance=&amp;quot;$instance&amp;quot;}[5m]) //5分支内增长耗时
increase(jvm_gc_collection_seconds_sum{instance=&amp;quot;$instance&amp;quot;}[5m])  tomcat线程数  sum by(instance)(tomcat_threads_total{instance=&amp;quot;$instance&amp;quot;}) </description>
    </item>
    
    <item>
      <title>Windows_exporter安装部署</title>
      <link>https://lyffin1997.github.io/application/windows_exporter%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Wed, 13 Jul 2022 23:58:09 +0800</pubDate>
      
      <guid>https://lyffin1997.github.io/application/windows_exporter%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</guid>
      <description>1. 安装及部署  下载windows exporter程序 https://github.com/prometheus-community/windows_exporter/releases 直接双击运行即可 默认端口9182 prometheus添加配置   2. PromQL  CPU利用率  100 - (avg by (instance) (irate(windows_cpu_time_total{instance=&amp;quot;$node&amp;quot;,mode=&amp;quot;idle&amp;quot;}[2m])) * 100)  内存容量  windows_cs_physical_memory_bytes{instance=&amp;quot;$node&amp;quot;}  内存使用量  windows_cs_physical_memory_bytes{instance=&amp;quot;$node&amp;quot;} - windows_os_physical_memory_free_bytes{instance=&amp;quot;$node&amp;quot;}  内存利用率  (1 - (windows_os_physical_memory_free_bytes{instance=&amp;quot;$node&amp;quot;} / windows_cs_physical_memory_bytes{instance=&amp;quot;$node&amp;quot;})) * 100  磁盘容量  sum by(instance)(windows_logical_disk_size_bytes{instance=&amp;quot;$node&amp;quot;})  磁盘使用量  sum by(instance)(windows_logical_disk_size_bytes{instance=&amp;quot;$node&amp;quot;} - windows_logical_disk_free_bytes{instance=&amp;quot;$node&amp;quot;})  磁盘利用率  (1 - sum by(instance)(windows_logical_disk_free_bytes{instance=&amp;quot;$node&amp;quot;}) / sum by(instance)(windows_logical_disk_size_bytes{instance=&amp;quot;$node&amp;quot;})) * 100  磁盘每秒读取(KB)  sum by(instance)(irate(windows_logical_disk_read_bytes_total{instance=&amp;quot;$node&amp;quot;}[5m])) / 1024  磁盘每秒写入(KB)  sum by(instance)(irate(windows_logical_disk_write_bytes_total{instance=&amp;quot;$node&amp;quot;}[5m])) / 1024  网络上传速率(Kbps)  sum by(instance)(irate(windows_net_bytes_sent_total{instance=&amp;quot;$node&amp;quot;,nic!</description>
    </item>
    
    <item>
      <title>Mysqld_exporter安装部署</title>
      <link>https://lyffin1997.github.io/application/mysqld_exporter%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Wed, 13 Jul 2022 23:45:04 +0800</pubDate>
      
      <guid>https://lyffin1997.github.io/application/mysqld_exporter%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</guid>
      <description>1. 登录mysql并增加exporter授权  mysql -uroot -p use mysql; set global validate_password_policy=0; create user &amp;lsquo;exporter&amp;rsquo;@&#39;%&#39; identified by &amp;lsquo;12345678&amp;rsquo;; GRANT PROCESS, REPLICATION CLIENT, SELECT ON . TO &amp;lsquo;exporter&amp;rsquo;@&#39;%&#39; WITH MAX_USER_CONNECTIONS 3; flush privileges;  2. 安装mysqld_exporter ​ 也可直接从链接下载tar包复制到目录中替换步骤2，下载链接：https://github.com/prometheus/mysqld_exporter/releases/download/v0.12.1/mysqld_exporter-0.12.1.linux-amd64.tar.gz
3. 创建mysql配置文件  cd /usr/local/prometheus/mysqld_exporter touch .my.cnf vi .my.cnf 按英文输入法小写“i”键 将以下内容复制粘贴  [client] host=127.0.0.1 port=3306 user=exporter password=12345678  按“Esc”键，然后再输入英文的“:wq”，按enter退出  4. 创建mysqld_exporter配置文件  cd /usr/lib/systemd/system/ touch mysql_exporter.service 输入文件内容如下  [Unit] Description=mysqld_exporter After=network.target [Service] Type=simple User=mysql # exporter对应授权账号,exporter123对应授权密码,localhost对应授权账号密码所在的地址 Environment=DATA_SOURCE_NAME=exporter:12345678@(localhost:3306)/ ExecStart=/usr/local/prometheus/mysqld_exporter/mysqld_exporter --web.</description>
    </item>
    
    <item>
      <title>Node_exporter安装部署</title>
      <link>https://lyffin1997.github.io/application/node_exporter%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Wed, 13 Jul 2022 23:14:57 +0800</pubDate>
      
      <guid>https://lyffin1997.github.io/application/node_exporter%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</guid>
      <description>1. 安装部署 1. cd /usr/local/prometheus （先进入你想安装的目录）
2. 下载node_exporter包 wget https://github.com/prometheus/node_exporter/releases/download/v0.18.1/node_exporter-0.18.1.linux-amd64.tar.gz -P /usr/local/prometheus 3. 解压 tar zxvf /usr/local/prometheus/node_exporter-0.18.1.linux-amd64.tar.gz 4. 重命名 mv /usr/local/prometheus/node_exporter-0.18.1.linux-amd64.tar.gz /usr/local/prometheus/node_exporter 5. 创建启动服务 touch /etc/systemd/system/node_exporter.service 6. 编辑启动服务文件  vim /etc/systemd/system/node_exporter.service 按i（注意切换英文输入） 将下列代码复制粘贴  [Unit] Description=node_exporter Documentation=https://prometheus.io/ After=network.target [Service] Type=simple User=root ExecStart=/usr/local/prometheus/node_exporter/node_exporter Restart=on-failure [Install] WantedBy=multi-user.target  按esc 按 :wq (注意:也要按)  7. 重新加载系统服务 systemctl daemon-reload 8. 开机自启 systemctl enable node_exporter 9. 启动 systemctl start node_exporter 10. 验证 http://10.4.4.173:9100/metrics
2. promQL 2.</description>
    </item>
    
  </channel>
</rss>
