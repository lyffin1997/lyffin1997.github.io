<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>拦截器 on 小黎的技术指北</title>
    <link>https://lyffin1997.github.io/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/</link>
    <description>Recent content in 拦截器 on 小黎的技术指北</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 14 Jul 2022 23:10:53 +0800</lastBuildDate><atom:link href="https://lyffin1997.github.io/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Springboot如何接管springmvc</title>
      <link>https://lyffin1997.github.io/spring/springboot%E5%A6%82%E4%BD%95%E6%8E%A5%E7%AE%A1springmvc/</link>
      <pubDate>Thu, 14 Jul 2022 23:10:53 +0800</pubDate>
      
      <guid>https://lyffin1997.github.io/spring/springboot%E5%A6%82%E4%BD%95%E6%8E%A5%E7%AE%A1springmvc/</guid>
      <description>1. 依赖 pom.xml
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!--这里代码示例使用Thymeleaf模板引擎--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-thymeleaf&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.projectlombok&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;lombok&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; 2. 代码示例 主要是通过实现WebMvcConfigurer.java接口来进行个性化定制，下面进行个别方法的重写展示：
  创建配置文件
在启动类同级目录下创建config文件夹，在里面创建配置文件：./config/MyMvcConfig.java
  2.1 重写视图解析器 可以在MyViewResolver中自定义一些功能
@Configuration public class MyMvcConfig implements WebMvcConfigurer { @Bean public MyViewResolver myViewResolver() { return new MyViewResolver(); } //自定义视图解析器  public static class MyViewResolver implements ViewResolver { @Override public View resolveViewName(String viewName, Locale locale) throws Exception { return null; } } } 2.2 重写视图控制器   实现视图跳转</description>
    </item>
    
  </channel>
</rss>
